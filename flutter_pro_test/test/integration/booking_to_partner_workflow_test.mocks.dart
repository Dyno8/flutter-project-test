// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_pro_test/test/integration/booking_to_partner_workflow_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter_pro_test/core/errors/failures.dart' as _i6;
import 'package:flutter_pro_test/features/booking/domain/entities/booking.dart'
    as _i7;
import 'package:flutter_pro_test/features/booking/domain/entities/booking_request.dart'
    as _i8;
import 'package:flutter_pro_test/features/booking/domain/repositories/booking_repository.dart'
    as _i4;
import 'package:flutter_pro_test/features/partner/domain/entities/job.dart'
    as _i10;
import 'package:flutter_pro_test/features/partner/domain/entities/partner_earnings.dart'
    as _i11;
import 'package:flutter_pro_test/features/partner/domain/repositories/partner_job_repository.dart'
    as _i9;
import 'package:flutter_pro_test/shared/repositories/base_repository.dart'
    as _i3;
import 'package:flutter_pro_test/shared/services/notification_service.dart'
    as _i12;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BookingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookingRepository extends _i1.Mock implements _i4.BookingRepository {
  MockBookingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>> createBooking(
    _i8.BookingRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createBooking, [request]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>.value(
              _FakeEither_0<_i6.Failure, _i7.Booking>(
                this,
                Invocation.method(#createBooking, [request]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>> getBookingById(
    String? bookingId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getBookingById, [bookingId]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>.value(
              _FakeEither_0<_i6.Failure, _i7.Booking>(
                this,
                Invocation.method(#getBookingById, [bookingId]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Booking>>> getUserBookings(
    String? userId, {
    _i7.BookingStatus? status,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUserBookings,
              [userId],
              {#status: status, #limit: limit},
            ),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, List<_i7.Booking>>>.value(
                  _FakeEither_0<_i6.Failure, List<_i7.Booking>>(
                    this,
                    Invocation.method(
                      #getUserBookings,
                      [userId],
                      {#status: status, #limit: limit},
                    ),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, List<_i7.Booking>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Booking>>> getPartnerBookings(
    String? partnerId, {
    _i7.BookingStatus? status,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getPartnerBookings,
              [partnerId],
              {#status: status, #limit: limit},
            ),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, List<_i7.Booking>>>.value(
                  _FakeEither_0<_i6.Failure, List<_i7.Booking>>(
                    this,
                    Invocation.method(
                      #getPartnerBookings,
                      [partnerId],
                      {#status: status, #limit: limit},
                    ),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, List<_i7.Booking>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Booking>>> getBookingsByDateRange(
    String? userId,
    DateTime? startDate,
    DateTime? endDate, {
    bool? isPartner = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getBookingsByDateRange,
              [userId, startDate, endDate],
              {#isPartner: isPartner},
            ),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, List<_i7.Booking>>>.value(
                  _FakeEither_0<_i6.Failure, List<_i7.Booking>>(
                    this,
                    Invocation.method(
                      #getBookingsByDateRange,
                      [userId, startDate, endDate],
                      {#isPartner: isPartner},
                    ),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, List<_i7.Booking>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>> updateBookingStatus(
    String? bookingId,
    _i7.BookingStatus? status,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateBookingStatus, [bookingId, status]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>.value(
              _FakeEither_0<_i6.Failure, _i7.Booking>(
                this,
                Invocation.method(#updateBookingStatus, [bookingId, status]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>> cancelBooking(
    String? bookingId,
    String? cancellationReason,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#cancelBooking, [bookingId, cancellationReason]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>.value(
              _FakeEither_0<_i6.Failure, _i7.Booking>(
                this,
                Invocation.method(#cancelBooking, [
                  bookingId,
                  cancellationReason,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>> confirmBooking(
    String? bookingId,
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#confirmBooking, [bookingId, partnerId]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>.value(
              _FakeEither_0<_i6.Failure, _i7.Booking>(
                this,
                Invocation.method(#confirmBooking, [bookingId, partnerId]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>> startBooking(
    String? bookingId,
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#startBooking, [bookingId, partnerId]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>.value(
              _FakeEither_0<_i6.Failure, _i7.Booking>(
                this,
                Invocation.method(#startBooking, [bookingId, partnerId]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>> completeBooking(
    String? bookingId,
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#completeBooking, [bookingId, partnerId]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>.value(
              _FakeEither_0<_i6.Failure, _i7.Booking>(
                this,
                Invocation.method(#completeBooking, [bookingId, partnerId]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i7.Booking>>);

  @override
  _i5.Stream<_i2.Either<_i6.Failure, List<_i7.Booking>>> listenToUserBookings(
    String? userId, {
    _i7.BookingStatus? status,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #listenToUserBookings,
              [userId],
              {#status: status, #limit: limit},
            ),
            returnValue:
                _i5.Stream<_i2.Either<_i6.Failure, List<_i7.Booking>>>.empty(),
          )
          as _i5.Stream<_i2.Either<_i6.Failure, List<_i7.Booking>>>);

  @override
  _i5.Stream<_i2.Either<_i6.Failure, List<_i7.Booking>>>
  listenToPartnerBookings(
    String? partnerId, {
    _i7.BookingStatus? status,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #listenToPartnerBookings,
              [partnerId],
              {#status: status, #limit: limit},
            ),
            returnValue:
                _i5.Stream<_i2.Either<_i6.Failure, List<_i7.Booking>>>.empty(),
          )
          as _i5.Stream<_i2.Either<_i6.Failure, List<_i7.Booking>>>);

  @override
  _i5.Stream<_i2.Either<_i6.Failure, _i7.Booking>> listenToBooking(
    String? bookingId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#listenToBooking, [bookingId]),
            returnValue:
                _i5.Stream<_i2.Either<_i6.Failure, _i7.Booking>>.empty(),
          )
          as _i5.Stream<_i2.Either<_i6.Failure, _i7.Booking>>);
}

/// A class which mocks [PartnerJobRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPartnerJobRepository extends _i1.Mock
    implements _i9.PartnerJobRepository {
  MockPartnerJobRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i10.Job>>> getPendingJobs(
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getPendingJobs, [partnerId]),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, List<_i10.Job>>>.value(
                  _FakeEither_0<_i6.Failure, List<_i10.Job>>(
                    this,
                    Invocation.method(#getPendingJobs, [partnerId]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, List<_i10.Job>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i10.Job>>> getAcceptedJobs(
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAcceptedJobs, [partnerId]),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, List<_i10.Job>>>.value(
                  _FakeEither_0<_i6.Failure, List<_i10.Job>>(
                    this,
                    Invocation.method(#getAcceptedJobs, [partnerId]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, List<_i10.Job>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i10.Job>>> getJobHistory(
    String? partnerId, {
    _i10.JobStatus? status,
    DateTime? startDate,
    DateTime? endDate,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getJobHistory,
              [partnerId],
              {
                #status: status,
                #startDate: startDate,
                #endDate: endDate,
                #limit: limit,
              },
            ),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, List<_i10.Job>>>.value(
                  _FakeEither_0<_i6.Failure, List<_i10.Job>>(
                    this,
                    Invocation.method(
                      #getJobHistory,
                      [partnerId],
                      {
                        #status: status,
                        #startDate: startDate,
                        #endDate: endDate,
                        #limit: limit,
                      },
                    ),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, List<_i10.Job>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i10.Job>> getJobById(String? jobId) =>
      (super.noSuchMethod(
            Invocation.method(#getJobById, [jobId]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i10.Job>>.value(
              _FakeEither_0<_i6.Failure, _i10.Job>(
                this,
                Invocation.method(#getJobById, [jobId]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i10.Job>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i10.Job>> acceptJob(
    String? jobId,
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#acceptJob, [jobId, partnerId]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i10.Job>>.value(
              _FakeEither_0<_i6.Failure, _i10.Job>(
                this,
                Invocation.method(#acceptJob, [jobId, partnerId]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i10.Job>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i10.Job>> rejectJob(
    String? jobId,
    String? partnerId,
    String? rejectionReason,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#rejectJob, [jobId, partnerId, rejectionReason]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i10.Job>>.value(
              _FakeEither_0<_i6.Failure, _i10.Job>(
                this,
                Invocation.method(#rejectJob, [
                  jobId,
                  partnerId,
                  rejectionReason,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i10.Job>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i10.Job>> startJob(
    String? jobId,
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#startJob, [jobId, partnerId]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i10.Job>>.value(
              _FakeEither_0<_i6.Failure, _i10.Job>(
                this,
                Invocation.method(#startJob, [jobId, partnerId]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i10.Job>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i10.Job>> completeJob(
    String? jobId,
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#completeJob, [jobId, partnerId]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i10.Job>>.value(
              _FakeEither_0<_i6.Failure, _i10.Job>(
                this,
                Invocation.method(#completeJob, [jobId, partnerId]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i10.Job>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i10.Job>> cancelJob(
    String? jobId,
    String? partnerId,
    String? cancellationReason,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#cancelJob, [
              jobId,
              partnerId,
              cancellationReason,
            ]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, _i10.Job>>.value(
              _FakeEither_0<_i6.Failure, _i10.Job>(
                this,
                Invocation.method(#cancelJob, [
                  jobId,
                  partnerId,
                  cancellationReason,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i10.Job>>);

  @override
  _i5.Stream<_i2.Either<_i6.Failure, List<_i10.Job>>> listenToPendingJobs(
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#listenToPendingJobs, [partnerId]),
            returnValue:
                _i5.Stream<_i2.Either<_i6.Failure, List<_i10.Job>>>.empty(),
          )
          as _i5.Stream<_i2.Either<_i6.Failure, List<_i10.Job>>>);

  @override
  _i5.Stream<_i2.Either<_i6.Failure, List<_i10.Job>>> listenToAcceptedJobs(
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#listenToAcceptedJobs, [partnerId]),
            returnValue:
                _i5.Stream<_i2.Either<_i6.Failure, List<_i10.Job>>>.empty(),
          )
          as _i5.Stream<_i2.Either<_i6.Failure, List<_i10.Job>>>);

  @override
  _i5.Stream<_i2.Either<_i6.Failure, _i10.Job>> listenToJob(String? jobId) =>
      (super.noSuchMethod(
            Invocation.method(#listenToJob, [jobId]),
            returnValue: _i5.Stream<_i2.Either<_i6.Failure, _i10.Job>>.empty(),
          )
          as _i5.Stream<_i2.Either<_i6.Failure, _i10.Job>>);

  @override
  _i5.Stream<_i2.Either<_i6.Failure, List<_i10.Job>>> listenToActiveJobs(
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#listenToActiveJobs, [partnerId]),
            returnValue:
                _i5.Stream<_i2.Either<_i6.Failure, List<_i10.Job>>>.empty(),
          )
          as _i5.Stream<_i2.Either<_i6.Failure, List<_i10.Job>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerEarnings>> getPartnerEarnings(
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getPartnerEarnings, [partnerId]),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerEarnings>>.value(
                  _FakeEither_0<_i6.Failure, _i11.PartnerEarnings>(
                    this,
                    Invocation.method(#getPartnerEarnings, [partnerId]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerEarnings>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerEarnings>>
  updatePartnerEarnings(String? partnerId, double? jobEarnings) =>
      (super.noSuchMethod(
            Invocation.method(#updatePartnerEarnings, [partnerId, jobEarnings]),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerEarnings>>.value(
                  _FakeEither_0<_i6.Failure, _i11.PartnerEarnings>(
                    this,
                    Invocation.method(#updatePartnerEarnings, [
                      partnerId,
                      jobEarnings,
                    ]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerEarnings>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i11.DailyEarning>>>
  getEarningsByDateRange(
    String? partnerId,
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getEarningsByDateRange, [
              partnerId,
              startDate,
              endDate,
            ]),
            returnValue:
                _i5.Future<
                  _i2.Either<_i6.Failure, List<_i11.DailyEarning>>
                >.value(
                  _FakeEither_0<_i6.Failure, List<_i11.DailyEarning>>(
                    this,
                    Invocation.method(#getEarningsByDateRange, [
                      partnerId,
                      startDate,
                      endDate,
                    ]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, List<_i11.DailyEarning>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>
  getPartnerAvailability(String? partnerId) =>
      (super.noSuchMethod(
            Invocation.method(#getPartnerAvailability, [partnerId]),
            returnValue:
                _i5.Future<
                  _i2.Either<_i6.Failure, _i11.PartnerAvailability>
                >.value(
                  _FakeEither_0<_i6.Failure, _i11.PartnerAvailability>(
                    this,
                    Invocation.method(#getPartnerAvailability, [partnerId]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>
  updateAvailabilityStatus(
    String? partnerId,
    bool? isAvailable,
    String? reason,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateAvailabilityStatus, [
              partnerId,
              isAvailable,
              reason,
            ]),
            returnValue:
                _i5.Future<
                  _i2.Either<_i6.Failure, _i11.PartnerAvailability>
                >.value(
                  _FakeEither_0<_i6.Failure, _i11.PartnerAvailability>(
                    this,
                    Invocation.method(#updateAvailabilityStatus, [
                      partnerId,
                      isAvailable,
                      reason,
                    ]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>
  updateOnlineStatus(String? partnerId, bool? isOnline) =>
      (super.noSuchMethod(
            Invocation.method(#updateOnlineStatus, [partnerId, isOnline]),
            returnValue:
                _i5.Future<
                  _i2.Either<_i6.Failure, _i11.PartnerAvailability>
                >.value(
                  _FakeEither_0<_i6.Failure, _i11.PartnerAvailability>(
                    this,
                    Invocation.method(#updateOnlineStatus, [
                      partnerId,
                      isOnline,
                    ]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>
  updateWorkingHours(
    String? partnerId,
    Map<String, List<String>>? workingHours,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateWorkingHours, [partnerId, workingHours]),
            returnValue:
                _i5.Future<
                  _i2.Either<_i6.Failure, _i11.PartnerAvailability>
                >.value(
                  _FakeEither_0<_i6.Failure, _i11.PartnerAvailability>(
                    this,
                    Invocation.method(#updateWorkingHours, [
                      partnerId,
                      workingHours,
                    ]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>> blockDates(
    String? partnerId,
    List<String>? dates,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#blockDates, [partnerId, dates]),
            returnValue:
                _i5.Future<
                  _i2.Either<_i6.Failure, _i11.PartnerAvailability>
                >.value(
                  _FakeEither_0<_i6.Failure, _i11.PartnerAvailability>(
                    this,
                    Invocation.method(#blockDates, [partnerId, dates]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>> unblockDates(
    String? partnerId,
    List<String>? dates,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#unblockDates, [partnerId, dates]),
            returnValue:
                _i5.Future<
                  _i2.Either<_i6.Failure, _i11.PartnerAvailability>
                >.value(
                  _FakeEither_0<_i6.Failure, _i11.PartnerAvailability>(
                    this,
                    Invocation.method(#unblockDates, [partnerId, dates]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>
  setTemporaryUnavailability(
    String? partnerId,
    DateTime? unavailableUntil,
    String? reason,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#setTemporaryUnavailability, [
              partnerId,
              unavailableUntil,
              reason,
            ]),
            returnValue:
                _i5.Future<
                  _i2.Either<_i6.Failure, _i11.PartnerAvailability>
                >.value(
                  _FakeEither_0<_i6.Failure, _i11.PartnerAvailability>(
                    this,
                    Invocation.method(#setTemporaryUnavailability, [
                      partnerId,
                      unavailableUntil,
                      reason,
                    ]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>
  clearTemporaryUnavailability(String? partnerId) =>
      (super.noSuchMethod(
            Invocation.method(#clearTemporaryUnavailability, [partnerId]),
            returnValue:
                _i5.Future<
                  _i2.Either<_i6.Failure, _i11.PartnerAvailability>
                >.value(
                  _FakeEither_0<_i6.Failure, _i11.PartnerAvailability>(
                    this,
                    Invocation.method(#clearTemporaryUnavailability, [
                      partnerId,
                    ]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i11.PartnerAvailability>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>> getJobStatistics(
    String? partnerId, {
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getJobStatistics,
              [partnerId],
              {#startDate: startDate, #endDate: endDate},
            ),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>.value(
                  _FakeEither_0<_i6.Failure, Map<String, dynamic>>(
                    this,
                    Invocation.method(
                      #getJobStatistics,
                      [partnerId],
                      {#startDate: startDate, #endDate: endDate},
                    ),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>
  getPerformanceMetrics(String? partnerId) =>
      (super.noSuchMethod(
            Invocation.method(#getPerformanceMetrics, [partnerId]),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>.value(
                  _FakeEither_0<_i6.Failure, Map<String, dynamic>>(
                    this,
                    Invocation.method(#getPerformanceMetrics, [partnerId]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, void>> markJobNotificationAsRead(
    String? partnerId,
    String? jobId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#markJobNotificationAsRead, [partnerId, jobId]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, void>>.value(
              _FakeEither_0<_i6.Failure, void>(
                this,
                Invocation.method(#markJobNotificationAsRead, [
                  partnerId,
                  jobId,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, int>> getUnreadNotificationsCount(
    String? partnerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getUnreadNotificationsCount, [partnerId]),
            returnValue: _i5.Future<_i2.Either<_i6.Failure, int>>.value(
              _FakeEither_0<_i6.Failure, int>(
                this,
                Invocation.method(#getUnreadNotificationsCount, [partnerId]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, int>>);
}

/// A class which mocks [NotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationService extends _i1.Mock
    implements _i12.NotificationService {
  MockNotificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> sendBookingNotification(
    String? fcmToken,
    String? title,
    String? body,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#sendBookingNotification, [
              fcmToken,
              title,
              body,
              data,
            ]),
            returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
              _FakeEither_1<_i6.Failure, void>(
                this,
                Invocation.method(#sendBookingNotification, [
                  fcmToken,
                  title,
                  body,
                  data,
                ]),
              ),
            ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<String?> getFCMToken() =>
      (super.noSuchMethod(
            Invocation.method(#getFCMToken, []),
            returnValue: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);

  @override
  _i5.Future<void> subscribeToTopic(String? topic) =>
      (super.noSuchMethod(
            Invocation.method(#subscribeToTopic, [topic]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> unsubscribeFromTopic(String? topic) =>
      (super.noSuchMethod(
            Invocation.method(#unsubscribeFromTopic, [topic]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> subscribeToPartnerNotifications(String? partnerId) =>
      (super.noSuchMethod(
            Invocation.method(#subscribeToPartnerNotifications, [partnerId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> unsubscribeFromPartnerNotifications(String? partnerId) =>
      (super.noSuchMethod(
            Invocation.method(#unsubscribeFromPartnerNotifications, [
              partnerId,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> sendNewJobNotification({
    required String? partnerId,
    required String? jobId,
    required String? serviceName,
    required String? clientName,
    required String? earnings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendNewJobNotification, [], {
              #partnerId: partnerId,
              #jobId: jobId,
              #serviceName: serviceName,
              #clientName: clientName,
              #earnings: earnings,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> sendJobStatusNotification({
    required String? partnerId,
    required String? jobId,
    required String? status,
    required String? serviceName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendJobStatusNotification, [], {
              #partnerId: partnerId,
              #jobId: jobId,
              #status: status,
              #serviceName: serviceName,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> sendEarningsNotification({
    required String? partnerId,
    required String? amount,
    required String? period,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendEarningsNotification, [], {
              #partnerId: partnerId,
              #amount: amount,
              #period: period,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> sendRatingNotification({
    required String? partnerId,
    required String? jobId,
    required double? rating,
    required String? review,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendRatingNotification, [], {
              #partnerId: partnerId,
              #jobId: jobId,
              #rating: rating,
              #review: review,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> scheduleNotification({
    required int? id,
    required String? title,
    required String? body,
    required DateTime? scheduledDate,
    Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#scheduleNotification, [], {
              #id: id,
              #title: title,
              #body: body,
              #scheduledDate: scheduledDate,
              #data: data,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> cancelScheduledNotification(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#cancelScheduledNotification, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> cancelAllNotifications() =>
      (super.noSuchMethod(
            Invocation.method(#cancelAllNotifications, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> scheduleBookingReminder({
    required String? bookingId,
    required String? serviceName,
    required DateTime? scheduledDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#scheduleBookingReminder, [], {
              #bookingId: bookingId,
              #serviceName: serviceName,
              #scheduledDate: scheduledDate,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
